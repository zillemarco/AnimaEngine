<?xml version="1.0" encoding="UTF-8"?>
<AnimaShaderInclude>
	<Name>compute-shadows-amount</Name>
	<Versions>
		<Version>
			<Code>
				<![CDATA[

				float ComputeShadowAmount(sampler2D shadowMap, vec2 coords, float compare, vec2 texelSize)
				{
					vec2 pixelPos = coords / texelSize + vec2(0.5f);
					vec2 fractPart = fract(pixelPos);
					vec2 startTexel = (pixelPos - fractPart) * texelSize;

					float bl = step(compare, texture(shadowMap, startTexel).r + DIL_ShadowMapBias);
					float br = step(compare, texture(shadowMap, startTexel + vec2(texelSize.x, 0.0f)).r + DIL_ShadowMapBias);
					float tl = step(compare, texture(shadowMap, startTexel + vec2(0.0f, texelSize.t)).r + DIL_ShadowMapBias);
					float tr = step(compare, texture(shadowMap, startTexel + texelSize).r + DIL_ShadowMapBias);

					float mixA = mix(bl, tl, fractPart.y);
					float mixB = mix(br, tr, fractPart.y);

					return mix(mixA, mixB, fractPart.x);
				}

				float linstep(float low, float high, float v)
				{
					return clamp((v - low) / (high - low), 0.0, 1.0);
				}

				float ComputeVarianceShadowAmount(sampler2D shadowMap, vec2 coords, float compare)
				{
					vec2 moments = texture(shadowMap, coords).xy;

					float p = step(compare, moments.x);
					float variance = max(moments.y - moments.x * moments.x, 0.00002);

					float d = compare - moments.x;
					float pMax = linstep(0.2, 1.0, variance / (variance + d * d));

					return min(max(p, pMax), 1.0);
				}

				]]>
			</Code>
		</Version>
	</Versions>
</AnimaShaderInclude>